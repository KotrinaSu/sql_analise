/*ISIKELIAME DUOMENIS, SUSIKURIAME PRIMARY KEY - KURIS YRA PADAROMAS KIEKVIENAI ROW EILUTEI*/

CREATE TABLE jobs_row_data(
employer_ID SERIAL PRIMARY KEY,
work_year varchar(50),
job_title varchar(50),
job_category varchar(50),
salary_currency varchar(50),
salary integer,
salary_in_usd integer,
employee_residence varchar(50),
experience_level varchar(50),
employment_type varchar(50),
work_setting varchar(50),
company_location varchar(50),
company_size varchar(50)
);

/*PATIKRINAME KAD VISKAS SUSIKELE, PARENKAME VISUS DUOMENIS*/

select *
from jobs_row_data;

/*NORMALIZUOJAME DUOMENIS I ATSKIRAS LENTELES, isrenkame tik unikalias
1.Kompanijos lentele+
2.Conditions
3.Salary
4.Jobs su conditionals, bet poto join ir sukeisti paliekant tik conditinal id
5.bendra lentele, ir tada ja join su kitomis paliekant tik tam tikrus id
*/

/*Kompanijos lentele- unikalios*/  
CREATE TABLE companies
AS SELECT DISTINCT company_location,company_size
FROM jobs_row_data;
   
   
ALTER TABLE companies ADD company_id integer
GENERATED BY DEFAULT AS IDENTITY;  

select *
from companies;

/*Job conditionals- unikalios*/ 

CREATE TABLE job_conditional
AS SELECT DISTINCT employment_type,work_setting
FROM jobs_row_data;

ALTER TABLE job_conditional ADD conditional_id integer
GENERATED BY DEFAULT AS IDENTITY; 

select *
from job_conditional;

/*Salary - unikalios*/ 

CREATE TABLE salary
AS SELECT DISTINCT salary_currency,salary,salary_in_usd 
FROM jobs_row_data;


ALTER TABLE salary ADD salary_id integer
GENERATED BY DEFAULT AS IDENTITY; 

select *
from salary;

/*Jobs- unikalios + nauja lenetelje kurioje sudeta ir job_conditional*/  
CREATE TABLE jobs_row
AS SELECT DISTINCT job_title,job_category,experience_level,employment_type,work_setting
FROM jobs_row_data;

ALTER TABLE jobs_row ADD jobs_id integer
GENERATED BY DEFAULT AS IDENTITY; 

select *
from jobs_row;


create table jobs as (SELECT jobs_row.jobs_id, job_conditional.conditional_id,job_title,job_category,experience_level
FROM jobs_row
INNER JOIN job_conditional ON jobs_row.employment_type=job_conditional.employment_type);

select *
from jobs;


/*bendra lentele, kurioje lieka visi duomenys, ir uzkeiciam juos i indeksus*/  


create table all_jobs_data as (
SELECT DISTINCT employer_ID,work_year,employee_residence, jobs.jobs_id, salary.salary_id,companies.company_id
from (jobs_row_data
inner join jobs on jobs.job_title = jobs_row_data.job_title
inner join salary on salary.salary = jobs_row_data.salary
inner join companies on companies.company_location = jobs_row_data.company_location));

select *
from all_jobs_data;

select *
from jobs_row_data;

/*
1. Didziausias atlyginimas pagal metus,pagal sali, pagal job_category)

3. Atlyginim vidurkis pagal full time, part time
4. Daugiausiai uždirbanti kategorija
5.Daugiausiai uždirbanti kategorija 2022 metais
6. Zmoniu dirbanciu full time atlyginimo vidurkis
7. Mažiausiai uždirbanti kategorija pagal šali
8.Isrinkti  unikalias darbo kategorijas
9.10 kategoriju in job_title kurios uzdirba daugiausiai
10.darbo kategorijos uzdarbio koreliacija pagal patirties lygi
11.darbo vietu pasiskirstymas pagal darbo vieta(remote, ir pan)
12.daugiausiai uzdirbusi kategorija 2023, 2022 ir 2021 metais
13.darbo poziciju skaicius pagal job_title
14.atlyginimas pagal kompanijos dydi
15.vidutinis uzdarbis vokietijoje, zmoniu dirbanciu full part
16.didziausias ir maziausias atlyginimas zmoniu dirbanciu remote in data analysis
*/


/*1. Didžiausias atlyginimas pagal kategoriją, surikiuojant nuo didžiausios*/

CREATE VIEW Pirmas_max_salary_by_category AS
SELECT MAX(salary.salary), jobs.job_category 
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join jobs on jobs.jobs_id = all_jobs_data.jobs_id
group by jobs.job_category
order by max DESC;

/*2. Didžiausias atlyginimas pagal metus, surikiuojant nuo maziausios*/

CREATE VIEW Antras_min_salary_by_year AS
SELECT MAX(salary.salary),all_jobs_data.work_year
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join jobs on jobs.jobs_id = all_jobs_data.jobs_id
group by all_jobs_data.work_year
order by max ASC;

/*3. Išrinkti unikalias reiksmes Job_category*/

CREATE VIEW Trecias_unique_job_category AS
select DISTINCT  job_category
from jobs_row_data;

/*4. Uždarbo vidurkis zmoniu pagal idarbinimo tipa (employment_type) - suaplvalinti skaičiu be kableliu*/

CREATE VIEW Ketvirtas_avg_sallary_by_employment_type AS
SELECT ROUND(AVG(salary.salary)), job_conditional.employment_type
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join jobs on jobs.jobs_id = all_jobs_data.jobs_id
inner join job_conditional on jobs.conditional_id = job_conditional.conditional_id
group by job_conditional.employment_type;


/*5. Isrinkti atlyginimo vidurki Vokietijoje , full -time L dydzio imoneje */

CREATE VIEW Penktas_avg_sallary_in_germany AS
SELECT ROUND(AVG(salary.salary))
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join companies on companies.company_id = all_jobs_data.company_id
inner join jobs on jobs.jobs_id = all_jobs_data.jobs_id
inner join job_conditional on job_conditional.conditional_id = jobs.conditional_id
WHERE employment_type ='Full-time' and employee_residence ='Germany' and company_size ='L';


/*6. Didziausias atlyginimas 2022 metais pagal kategorija */
CREATE VIEW sestas_max_salary_2022_by_company AS
SELECT max(salary.salary),jobs.job_category
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join companies on companies.company_id = all_jobs_data.company_id
inner join jobs on jobs.jobs_id = all_jobs_data.jobs_id
inner join job_conditional on job_conditional.conditional_id = jobs.conditional_id
WHERE work_year ='2022'
group by jobs.job_category;


/*7. Didziausias atlyginimas isrikiuotas pagal sali nuo didziausio, limituojnt 100 */

CREATE VIEW septintas_salary_by_country_order_from_max AS
SELECT salary.salary, companies.company_location
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join companies on companies.company_id = all_jobs_data.company_id
order by salary.salary desc
limit 100;

/*8. Maziausias atlyginimas isrikiuotas pagal sali nuo didziausio, limituojnt 100 */

CREATE VIEW astuntas_salary_by_country_order_from_min AS
SELECT salary.salary, companies.company_location
FROM all_jobs_data
inner join salary on salary.salary_id = all_jobs_data.salary_id
inner join companies on companies.company_id = all_jobs_data.company_id
order by salary.salary asc
limit 100;

/*9. Didziausias atlyginimas 2022 metais pagal kategorija */















